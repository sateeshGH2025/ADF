{
	"name": "missing_files",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Web1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_inbound",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "Get Metadata2",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_outbound",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "source",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get Metadata2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "source_files",
					"value": {
						"value": "@activity('Get Metadata1').output.childItems",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "source",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('source_files')",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Set variable4",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@contains(join(activity('Get Metadata2').output.childItems,','), variables('file_name'))",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Copy data1",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "BinarySource",
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true,
													"wildcardFileName": {
														"value": "@variables('file_name')",
														"type": "Expression"
													},
													"deleteFilesAfterCompletion": false
												},
												"formatSettings": {
													"type": "BinaryReadSettings"
												}
											},
											"sink": {
												"type": "BinarySink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "ds_inbound",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "ds_outbound",
												"type": "DatasetReference"
											}
										]
									},
									{
										"name": "Stored procedure1",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Copy data1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[insert_pipeline_id]",
											"storedProcedureParameters": {
												"Factory_name": {
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													},
													"type": "String"
												},
												"pipeline_name": {
													"value": {
														"value": "@concat(pipeline().Pipeline,'_',item().name)",
														"type": "Expression"
													},
													"type": "String"
												},
												"pipeline_run_id": {
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "linkedService1",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						},
						{
							"name": "Set variable4",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "file_name",
								"value": {
									"value": "@item().name",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Lookup2",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Set variable4",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderStoredProcedureName": "[dbo].[Email_notification]",
									"storedProcedureParameters": {
										"ADF_name": {
											"type": "String",
											"value": {
												"value": "@pipeline().DataFactory",
												"type": "Expression"
											}
										},
										"error_message": {
											"type": "String",
											"value": {
												"value": "@activity('Set variable4').Error.message",
												"type": "Expression"
											}
										},
										"Pipeline_name": {
											"type": "String",
											"value": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											}
										},
										"status": {
											"type": "String",
											"value": {
												"value": "@variables('Error')",
												"type": "Expression"
											}
										},
										"trigger_date": {
											"type": "String",
											"value": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "sp_emailnotification",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Web1_copy1",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Lookup2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"method": "POST",
								"url": "https://prod-73.eastus.logic.azure.com:443/workflows/48186c82e3ef4955804e0b671ce69628/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=7qcN8dUKISBFKsiQxZgQPsG_cCD7JemoS_jCfYO26ig",
								"body": {
									"value": "@concat('{\n    \"to\":\"',variables('to'),'\",\n     \"subject\":\"',activity('Lookup2').output.value[0].subject,'\",\n     \"body\":\"',activity('Lookup2').output.value[0].body,'\"\n}')",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderStoredProcedureName": "[dbo].[Email_notification]",
						"storedProcedureParameters": {
							"ADF_name": {
								"type": "String",
								"value": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								}
							},
							"error_message": {
								"type": "String",
								"value": null
							},
							"Pipeline_name": {
								"type": "String",
								"value": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							},
							"status": {
								"type": "String",
								"value": {
									"value": "@variables('Start')",
									"type": "Expression"
								}
							},
							"trigger_date": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "sp_emailnotification",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Web1",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"url": "https://prod-73.eastus.logic.azure.com:443/workflows/48186c82e3ef4955804e0b671ce69628/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=7qcN8dUKISBFKsiQxZgQPsG_cCD7JemoS_jCfYO26ig",
					"body": {
						"value": "@concat('{\n    \"to\":\"',variables('to'),'\",\n     \"subject\":\"',activity('Lookup1').output.value[0].subject,'\",\n     \"body\":\"',activity('Lookup1').output.value[0].body,'\"\n}')",
						"type": "Expression"
					}
				}
			}
		],
		"variables": {
			"source_files": {
				"type": "Array"
			},
			"destination_files": {
				"type": "Integer"
			},
			"Missing_files": {
				"type": "Array"
			},
			"file_name": {
				"type": "Integer"
			},
			"to": {
				"type": "String",
				"defaultValue": "bsurya1009@gmail.com"
			},
			"Start": {
				"type": "String",
				"defaultValue": "Started"
			},
			"Successful": {
				"type": "String",
				"defaultValue": "Successful"
			},
			"Error": {
				"type": "String",
				"defaultValue": "Error"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-09-04T09:00:54Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}